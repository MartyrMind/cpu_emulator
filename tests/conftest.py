import sys
from pathlib import Path

import pytest
from loguru import logger

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å Python
project_root = Path(__file__).parent.parent
if str(project_root) not in sys.path:
    sys.path.insert(0, str(project_root))


@pytest.fixture(scope="session", autouse=True)
def setup_test_logger():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–æ–≥–≥–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–æ–≤"""

    # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ handlers
    logger.remove()

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ª–æ–≥–æ–≤ –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
    test_logs_dir = project_root / "logs"
    test_logs_dir.mkdir(exist_ok=True)

    # Handler –¥–ª—è —Ç–µ—Å—Ç–æ–≤ (–≤—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Ñ–∞–π–ª)
    logger.add(
        str(test_logs_dir / "test_run.log"),
        level="DEBUG",
        format="{time:YYYY-MM-DD HH:mm:ss} | {level: <8} | {name}:{function}:{line} | {message}",
        mode="w",  # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—å —Ñ–∞–π–ª–∞
        enqueue=True,
        backtrace=True,
        diagnose=True,
    )

    logger.info("üß™ –õ–æ–≥–≥–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–æ–≤")
    yield
    logger.info("‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã")


@pytest.fixture(autouse=True)
def log_test_function(request):
    """–õ–æ–≥–∏—Ä—É–µ—Ç –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞"""
    test_name = request.node.name
    logger.info(f"üöÄ –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞: {test_name}")
    yield
    logger.info(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞: {test_name}")
